<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
    <import resource="Spring-Security.xml"></import>
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <!--1\datasource的配置,使用spring内置的数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
    </bean>
    <!-- 2. 配置 JPA 的 EntityManagerFactory -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"></property>


        <!--hibernate对jpa的实现产品-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
        </property>

        <!--扫描实体类所在的包-->
        <property name="packagesToScan" value="com.silence.sspaint.entity"></property>


        <!--jpa的配置-->
        <property name="jpaProperties">
            <props>
                <!-- 二级缓存相关 -->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>

                <!--配置二级缓存的配置文件的位置-->
                <prop key="net.sf.ehcache.configurationResourceName">ehcache-failsafe.xml</prop>
                <!-- 生成的数据表的列的映射策略 -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!-- hibernate 基本属性 -->
                <!--数据库方言-->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <!--显示sql语句-->
                <prop key="hibernate.show_sql">true</prop>
                <!--sql语句格式化-->
                <prop key="hibernate.format_sql">true</prop>
                <!--数据库表的生成策略-->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>


    <!--配置jpa的事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--使用注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--配置基于spring-data-jpa 的实现仓库-->
    <jpa:repositories base-package="com.silence.sspaint.repostiory"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>

    <!--扫描service层组件-->
    <context:component-scan base-package="com.silence.sspaint.service">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service"></context:include-filter>
    </context:component-scan>

</beans>